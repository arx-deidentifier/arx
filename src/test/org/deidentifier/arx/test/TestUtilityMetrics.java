/*
 * ARX: Powerful Data Anonymization
 * Copyright (C) 2012 - 2014 Florian Kohlmayer, Fabian Prasser
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package org.deidentifier.arx.test;

import java.io.IOException;
import java.util.Arrays;
import java.util.Collection;

import org.deidentifier.arx.ARXConfiguration;
import org.deidentifier.arx.AttributeType.Hierarchy;
import org.deidentifier.arx.Data;
import org.deidentifier.arx.DataSubset;
import org.deidentifier.arx.criteria.DPresence;
import org.deidentifier.arx.criteria.HierarchicalDistanceTCloseness;
import org.deidentifier.arx.criteria.KAnonymity;
import org.deidentifier.arx.criteria.RecursiveCLDiversity;
import org.deidentifier.arx.metric.Metric;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

/**
 * Test for utility  transformations
 * 
 * @author Fabian Prasser
 * @author Florian Kohlmayer
 */
@RunWith(Parameterized.class)
public class TestUtilityMetrics extends TestUtilityMetricsAbstract {

    @Parameters(name = "{index}:[{0}]")
    public static Collection<Object[]> cases() throws IOException {
        return Arrays.asList(new Object[][] {
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 0, 0]", "232.0", "[1, 4, 1, 1, 1, 2, 2, 1]", "301.6", "[0, 4, 1, 2, 3, 2, 1, 0]", "335.1111111111111", "[1, 4, 1, 2, 2, 2, 0, 0]", "107.71428571428571", "[1, 4, 0, 2, 3, 2, 2, 1]", "603.2", "[1, 4, 1, 2, 3, 2, 0, 1]", "430.85714285714283", "[0, 0, 0, 0, 0, 0, 0, 0]", "9.139393939393939", "[0, 4, 0, 2, 0, 0, 0, 0]", "15.387755102040817", "[0, 2, 0, 1, 0, 0, 1, 1]", "11.211895910780669", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 3, 2, 2, 1]", "301.6", "[0, 4, 1, 1, 3, 2, 2, 1]", "754.0", "[0, 4, 1, 1, 1, 2, 2, 1]", "150.8", "[0, 0, 0, 0, 0, 0, 0, 0]", "100.53333333333333", "[1, 2, 1, 2, 3, 2, 2, 1]", "377.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "1508.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "100.53333333333333", "[0, 1, 0, 2, 2, 1, 1, 1]", "32.78260869565217", "[0, 3, 0, 0, 2, 1, 2, 0]", "40.21333333333333", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "1508.0", "[0, 4, 1, 2, 3, 2, 2, 1]", "1508.0", "[0, 4, 1, 0, 3, 2, 1, 1]", "502.6666666666667", "[1, 4, 1, 2, 2, 2, 2, 1]", "1005.3333333333334", "[0, 0, 0, 0, 0, 0, 0, 0]", "3016.0", "[1, 2, 0, 1, 0, 2, 2, 1]", "232.0", "[1, 2, 0, 0, 3, 0, 1, 0]", "251.33333333333334", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "15081.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "15081.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "1774.235294117647", "[1, 4, 1, 0, 3, 2, 2, 1]", "4308.857142857143", "[0, 0, 0, 0, 0, 0, 0, 0]", "1774.235294117647", "[1, 4, 0, 2, 0, 2, 2, 1]", "1774.235294117647", "[0, 0, 1, 0, 1, 0, 0, 1]", "701.4418604651163", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 1, 2, 1]", "5027.0", "[1, 1, 1, 1, 3, 2, 2, 1]", "1005.4", "[1, 4, 1, 0, 3, 1, 2, 1]", "942.5625", "[0, 3, 1, 2, 3, 1, 2, 1]", "773.3846153846154", "[1, 2, 1, 1, 3, 2, 2, 1]", "1885.125", "[1, 4, 1, 1, 3, 2, 2, 0]", "7540.5", "[0, 0, 0, 0, 0, 0, 0, 0]", "29.113899613899616", "[1, 2, 1, 2, 0, 2, 0, 1]", "93.96261682242991", "[0, 3, 1, 0, 0, 1, 1, 0]", "53.76470588235294", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "1508.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "1508.0", "[0, 2, 1, 2, 3, 2, 2, 1]", "377.0", "[1, 4, 1, 2, 3, 2, 1, 1]", "1508.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "3016.0", "[1, 1, 0, 2, 0, 2, 2, 1]", "215.42857142857142", "[1, 1, 1, 1, 2, 0, 1, 0]", "158.73684210526315", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "15081.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "15081.0", "[0, 4, 1, 2, 2, 2, 2, 1]", "7540.5", "[0, 4, 1, 1, 2, 2, 2, 1]", "7540.5", "[0, 0, 0, 0, 0, 0, 0, 0]", "1774.235294117647", "[0, 1, 0, 2, 3, 0, 2, 1]", "914.0", "[1, 2, 1, 1, 0, 1, 1, 1]", "887.1176470588235", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 3, 2, 2, 1]", "301.6", "[1, 4, 0, 2, 3, 2, 2, 1]", "603.2", "[1, 4, 1, 0, 3, 2, 1, 0]", "232.0", "[1, 4, 0, 2, 2, 2, 2, 1]", "251.33333333333334", "[1, 4, 1, 2, 3, 2, 2, 0]", "1508.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "1508.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "201.06666666666666", "[0, 4, 0, 1, 1, 2, 2, 0]", "100.53333333333333", "[1, 2, 0, 0, 0, 2, 0, 0]", "55.851851851851855", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createAECSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 1, 2, 1]", "2513.5", "[1, 4, 1, 0, 3, 2, 2, 1]", "4308.857142857143", "[1, 3, 1, 1, 3, 1, 2, 1]", "837.8333333333334", "[0, 3, 1, 2, 2, 1, 0, 1]", "324.3225806451613", "[1, 4, 1, 2, 2, 2, 2, 1]", "10054.0", "[1, 4, 1, 1, 3, 2, 2, 0]", "7540.5", "[0, 0, 0, 0, 0, 0, 0, 0]", "62.4472049689441", "[0, 1, 1, 1, 0, 1, 0, 1]", "75.59398496240601", "[1, 0, 1, 1, 3, 1, 2, 1]", "157.09375", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 0, 2, 0, 1, 0]", "160.43617021276594", "[1, 3, 0, 2, 2, 0, 2, 0]", "150.81", "[0, 4, 1, 0, 1, 0, 0, 1]", "97.6116504854369", "[0, 1, 1, 2, 1, 0, 0, 1]", "63.76744186046512", "[0, 3, 1, 0, 3, 2, 1, 1]", "363.3975903614458", "[1, 1, 0, 2, 3, 2, 2, 1]", "520.0344827586207", "[0, 0, 0, 0, 0, 0, 0, 0]", "29.113899613899616", "[0, 0, 0, 0, 2, 1, 2, 0]", "30.37462235649547", "[0, 1, 1, 0, 0, 0, 0, 0]", "30.683621566632755", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[4, 2, 0, 2, 1, 4, 0]", "52.823480432972524", "[3, 2, 1, 0, 0, 3, 1]", "24.24188001528468", "[5, 4, 0, 1, 0, 2, 0]", "51.78857142857143", "[5, 3, 1, 1, 0, 0, 4]", "20.937623762376237", "[4, 1, 1, 2, 1, 3, 0]", "55.74780316344464", "[4, 3, 1, 2, 1, 3, 1]", "1349.8085106382978", "[0, 0, 0, 0, 0, 0, 0]", "63441.0", "[0, 2, 0, 1, 1, 4, 4]", "615.9320388349514", "[1, 2, 1, 1, 0, 4, 1]", "18.177936962750717", "[5, 4, 1, 2, 1, 4, 4]", "63441.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[1, 1, 0, 3, 1, 1, 1]", "118.74941176470588", "[4, 0, 2, 0, 1, 2, 2]", "171.95400340715503", "[2, 1, 2, 0, 0, 1, 1]", "53.604354753053634", "[4, 0, 0, 0, 0, 2, 2]", "45.121591417076445", "[0, 2, 3, 3, 1, 0, 2]", "208.11752577319587", "[4, 2, 0, 2, 1, 1, 1]", "355.4119718309859", "[0, 0, 0, 0, 0, 0, 0]", "122.34787878787878", "[0, 2, 3, 0, 1, 1, 0]", "32.83571893298634", "[0, 1, 0, 1, 0, 1, 1]", "33.985521885521884", "[5, 2, 3, 3, 1, 2, 2]", "100937.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[1, 4, 0, 0, 1, 0, 1, 0]", "266.9569306930693", "[2, 4, 0, 2, 0, 1, 1, 1]", "771.4635193133047", "[1, 1, 0, 0, 0, 1, 0, 0]", "128.0581809546426", "[0, 0, 0, 0, 1, 2, 1, 1]", "70.25182386659719", "[1, 4, 0, 0, 2, 1, 2, 1]", "1182.5723684210527", "[0, 5, 1, 0, 0, 1, 2, 1]", "729.7063599458728", "[0, 0, 0, 0, 0, 0, 0, 0]", "68.94055228841728", "[0, 0, 1, 0, 1, 1, 0, 1]", "89.83058470764618", "[1, 0, 0, 1, 1, 1, 0, 0]", "96.83120847548932", "[2, 5, 1, 2, 2, 2, 2, 2]", "539253.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[0, 0, 1, 0, 1, 1, 0, 1]", "57.85003150598614", "[5, 2, 1, 0, 1, 0, 0, 0]", "174.769951676673", "[3, 1, 2, 0, 0, 0, 0, 0]", "62.59198657436543", "[0, 0, 0, 0, 1, 2, 1, 0]", "45.65640182089438", "[3, 0, 2, 3, 3, 0, 1, 1]", "3926.0", "[1, 0, 2, 0, 3, 1, 0, 1]", "596.1558441558442", "[0, 0, 0, 0, 0, 0, 0, 0]", "16.86359397518863", "[1, 2, 0, 0, 0, 1, 0, 0]", "49.84563982626128", "[0, 0, 0, 3, 0, 0, 1, 0]", "25.881036539087066", "[5, 2, 2, 3, 4, 2, 1, 1]", "1193504.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 2, 1, 2, 1, 0]", "65.56521739130434", "[1, 4, 0, 2, 2, 2, 0, 0]", "71.80952380952381", "[0, 0, 1, 2, 3, 2, 2, 0]", "23.2", "[0, 4, 0, 1, 2, 1, 1, 1]", "81.51351351351352", "[0, 0, 0, 0, 0, 0, 0, 0]", "100.53333333333333", "[0, 3, 0, 0, 2, 0, 2, 1]", "52.91228070175438", "[0, 0, 1, 0, 2, 1, 2, 1]", "22.176470588235293", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "754.0", "[0, 2, 1, 2, 0, 2, 2, 0]", "301.6", "[1, 1, 1, 1, 3, 2, 0, 0]", "201.06666666666666", "[0, 0, 0, 0, 0, 0, 0, 0]", "3016.0", "[1, 0, 1, 0, 3, 0, 1, 0]", "167.55555555555554", "[0, 2, 1, 0, 0, 1, 2, 1]", "335.1111111111111", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0", "[1, 4, 1, 2, 2, 1, 2, 1]", "3770.25", "[0, 4, 0, 2, 1, 2, 1, 0]", "2742.0", "[1, 2, 0, 2, 3, 2, 0, 0]", "1508.1", "[0, 0, 0, 0, 0, 0, 0, 0]", "1774.235294117647", "[1, 1, 1, 0, 1, 0, 1, 1]", "569.0943396226415", "[0, 1, 0, 0, 0, 2, 0, 1]", "1206.48", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 1, 3, 2, 1, 0]", "137.0909090909091", "[1, 3, 0, 2, 3, 1, 2, 0]", "143.61904761904762", "[0, 2, 1, 0, 3, 2, 1, 1]", "65.56521739130434", "[1, 1, 0, 2, 3, 2, 0, 1]", "56.905660377358494", "[0, 0, 0, 0, 0, 0, 0, 0]", "201.06666666666666", "[1, 4, 0, 0, 0, 1, 2, 0]", "71.80952380952381", "[0, 1, 1, 1, 1, 0, 2, 0]", "39.68421052631579", "[1, 4, 1, 2, 3, 2, 2, 1]", "3016.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createAECSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 1, 0, 2, 3, 2, 1, 1]", "235.640625", "[0, 2, 1, 1, 3, 2, 1, 1]", "603.24", "[0, 3, 0, 0, 1, 1, 2, 1]", "155.4742268041237", "[1, 1, 1, 0, 3, 0, 1, 1]", "171.375", "[0, 0, 0, 0, 0, 0, 0, 0]", "62.4472049689441", "[0, 0, 1, 1, 0, 2, 2, 0]", "42.72237960339943", "[1, 0, 0, 0, 1, 0, 1, 1]", "52.455652173913045", "[1, 4, 1, 2, 3, 2, 2, 1]", "30162.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 1, 2, 2, 0]", "37795.48918130765", "[0, 4, 1, 2, 2, 2, 2, 1]", "39457.06809896586", "[1, 3, 1, 2, 1, 2, 2, 1]", "35631.74820087444", "[1, 4, 0, 2, 3, 1, 2, 1]", "42104.31665779459", "[1, 4, 1, 2, 2, 2, 2, 1]", "42185.638691723536", "[1, 4, 1, 1, 2, 2, 2, 1]", "39177.741183062324", "[0, 0, 0, 0, 0, 0, 0, 0]", "36572.579698609625", "[0, 4, 0, 2, 1, 0, 2, 0]", "32386.775747138545", "[0, 0, 0, 0, 3, 0, 0, 1]", "29151.026471165602", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 1, 2, 2, 1]", "37502.576040732165", "[1, 4, 0, 1, 3, 2, 2, 1]", "40089.94234267562", "[0, 4, 0, 0, 3, 2, 2, 1]", "35261.99222025626", "[0, 4, 1, 2, 2, 2, 2, 0]", "37023.41064678366", "[0, 4, 1, 2, 3, 2, 2, 1]", "42760.9466619356", "[1, 4, 1, 2, 3, 2, 2, 0]", "43053.859802511084", "[0, 0, 0, 0, 0, 0, 0, 0]", "42878.86999182095", "[0, 3, 0, 0, 0, 2, 2, 1]", "28509.670967465514", "[1, 0, 0, 2, 0, 0, 2, 1]", "31507.727899961945", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "42481.61974603207", "[0, 4, 1, 2, 3, 2, 2, 1]", "42760.9466619356", "[0, 4, 1, 2, 3, 0, 2, 0]", "43505.49855877667", "[0, 4, 1, 1, 3, 2, 2, 1]", "39753.04915327439", "[0, 0, 0, 0, 0, 0, 0, 0]", "45489.51725469332", "[1, 3, 0, 1, 0, 2, 0, 0]", "41658.27496240442", "[0, 4, 0, 1, 3, 1, 0, 1]", "40609.54407770886", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "428467.2965004935", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863", "[0, 4, 1, 1, 1, 2, 2, 1]", "397534.5211960353", "[1, 4, 1, 2, 3, 1, 2, 1]", "445323.52112350945", "[0, 0, 0, 0, 0, 0, 0, 0]", "449310.02427120326", "[1, 3, 1, 1, 1, 0, 0, 1]", "400834.4523395003", "[0, 0, 0, 1, 0, 0, 1, 1]", "439268.9450931776", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 1, 3, 2, 2, 1]", "379458.17719685676", "[1, 4, 1, 1, 2, 2, 2, 1]", "392857.3885868783", "[0, 2, 0, 2, 3, 2, 2, 1]", "331905.6010080186", "[1, 4, 1, 1, 2, 2, 2, 0]", "368439.2639330961", "[1, 2, 1, 2, 3, 2, 2, 1]", "382559.9421471486", "[0, 4, 1, 2, 3, 2, 0, 1]", "385895.42709133774", "[0, 0, 0, 0, 0, 0, 0, 0]", "268778.2247193986", "[0, 2, 1, 2, 2, 0, 0, 0]", "253206.51359586557", "[0, 1, 0, 1, 0, 2, 1, 1]", "199996.966956613", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "42481.61974603207", "[0, 4, 1, 2, 3, 2, 2, 1]", "42760.9466619356", "[0, 3, 1, 2, 3, 2, 2, 1]", "38652.87376940505", "[1, 4, 1, 2, 2, 2, 2, 1]", "42185.638691723536", "[0, 0, 0, 0, 0, 0, 0, 0]", "45489.51725469332", "[1, 2, 0, 1, 3, 2, 1, 0]", "38677.17462349315", "[1, 4, 0, 1, 0, 2, 2, 1]", "39790.481175650784", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 2, 2, 1]", "398400.07418064494", "[0, 4, 1, 2, 3, 2, 2, 1]", "428467.2965004935", "[1, 4, 0, 1, 3, 2, 2, 1]", "403537.9279918544", "[0, 4, 1, 1, 1, 2, 2, 1]", "397534.5211960353", "[0, 0, 0, 0, 0, 0, 0, 0]", "449310.02427120326", "[1, 4, 1, 1, 1, 1, 2, 1]", "380967.84437195136", "[0, 0, 1, 1, 0, 1, 2, 0]", "427484.87811209424", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "43097.83985133683", "[1, 4, 0, 1, 3, 2, 2, 1]", "40089.94234267562", "[1, 4, 0, 2, 2, 2, 2, 1]", "39806.91590680947", "[0, 4, 1, 2, 3, 1, 2, 0]", "39472.83545239412", "[1, 4, 1, 2, 3, 2, 2, 0]", "43053.859802511084", "[1, 4, 1, 1, 3, 2, 2, 1]", "42481.61974603207", "[0, 0, 0, 0, 0, 0, 0, 0]", "44045.84324268672", "[1, 0, 0, 2, 1, 1, 1, 0]", "35155.79302037117", "[0, 3, 1, 0, 2, 2, 1, 1]", "30749.497621881972", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 1, 2, 1]", "445323.52112350945", "[1, 4, 0, 1, 3, 2, 2, 1]", "402442.6789845893", "[0, 4, 1, 0, 2, 2, 2, 1]", "341038.03115071583", "[1, 4, 0, 2, 2, 2, 2, 0]", "375172.90980909334", "[1, 3, 1, 2, 3, 2, 2, 1]", "409525.3995167053", "[1, 4, 1, 1, 3, 2, 2, 0]", "401399.58960332786", "[0, 0, 0, 0, 0, 0, 0, 0]", "335625.27531107725", "[0, 3, 0, 2, 3, 2, 1, 0]", "323542.03430225584", "[0, 1, 0, 2, 3, 1, 0, 1]", "280220.98320368276", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 1, 0, 0, 1, 2, 2, 1]", "213938.9707150558", "[0, 4, 0, 0, 3, 1, 0, 0]", "281197.88251886296", "[1, 1, 1, 0, 1, 1, 0, 1]", "220123.8042767633", "[1, 0, 0, 1, 2, 2, 0, 1]", "198394.0850062315", "[1, 3, 1, 2, 1, 2, 0, 1]", "315247.2281706223", "[1, 4, 1, 0, 1, 1, 0, 1]", "299805.43493515893", "[0, 0, 0, 0, 0, 0, 0, 0]", "268778.2247193986", "[0, 1, 0, 1, 0, 1, 0, 1]", "206871.18762919746", "[0, 3, 1, 0, 0, 0, 0, 1]", "225818.85565423383", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[2, 4, 1, 0, 0, 3, 3]", "1252255.7147393993", "[3, 2, 0, 1, 0, 3, 3]", "1290009.3401703776", "[3, 2, 1, 0, 1, 1, 0]", "1761956.8888455457", "[5, 0, 1, 1, 0, 4, 4]", "1535699.5214239324", "[4, 1, 1, 1, 0, 2, 2]", "1453095.987838773", "[3, 1, 1, 1, 1, 3, 3]", "1555332.3009072575", "[0, 0, 0, 0, 0, 0, 0]", "2207518.9993976387", "[1, 0, 1, 2, 0, 0, 0]", "2207518.999397588", "[2, 0, 0, 0, 1, 4, 0]", "2207435.145801784", "[5, 4, 1, 2, 1, 4, 4]", "2207518.9993976974") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[0, 2, 0, 2, 0, 2, 0]", "610899.0454431572", "[4, 0, 0, 1, 0, 1, 0]", "743462.9353531044", "[0, 1, 1, 0, 1, 2, 1]", "850936.2476760471", "[0, 0, 0, 3, 0, 0, 0]", "530373.4899171473", "[4, 1, 1, 2, 0, 2, 2]", "1344741.6698462095", "[1, 2, 1, 3, 0, 2, 2]", "1179292.4833094797", "[0, 0, 0, 0, 0, 0, 0]", "805526.2618565466", "[0, 0, 0, 2, 0, 1, 0]", "589622.8171572211", "[0, 0, 0, 0, 1, 0, 1]", "900715.6011957508", "[5, 2, 3, 3, 1, 2, 2]", "1828114.5308318879") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[1, 0, 0, 0, 0, 2, 1, 1]", "1721359.1869000471", "[0, 3, 0, 0, 0, 1, 1, 0]", "1831564.5939928882", "[0, 1, 0, 0, 0, 0, 0, 2]", "1705815.347498671", "[0, 2, 0, 0, 1, 1, 0, 0]", "1754332.0014117137", "[1, 4, 0, 0, 1, 2, 2, 2]", "3790189.519044233", "[1, 3, 1, 2, 2, 2, 1, 2]", "5546865.841164317", "[0, 0, 0, 0, 0, 0, 0, 0]", "1259537.2231967656", "[0, 0, 0, 1, 1, 1, 0, 2]", "1573071.6156857733", "[0, 0, 0, 2, 1, 1, 0, 1]", "1608202.892069665", "[2, 5, 1, 2, 2, 2, 2, 2]", "7631154.350031186") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[3, 0, 0, 1, 0, 0, 0, 1]", "7019478.382462302", "[2, 1, 0, 0, 0, 0, 0, 1]", "7015694.546330848", "[5, 0, 0, 1, 0, 0, 0, 0]", "7850659.387720069", "[1, 0, 0, 0, 2, 0, 0, 0]", "7881739.155309068", "[0, 0, 2, 3, 3, 0, 1, 1]", "1.2711369785573479E7", "[5, 2, 2, 2, 4, 2, 1, 0]", "2.3063727989775106E7", "[0, 0, 0, 0, 0, 0, 0, 0]", "1.118728933955576E7", "[1, 0, 0, 2, 0, 0, 0, 0]", "7663802.176276544", "[0, 1, 1, 0, 0, 0, 0, 0]", "7731998.340235524", "[5, 2, 2, 3, 4, 2, 1, 1]", "2.5025416064416602E7") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 0, 2, 2, 2, 1]", "32519.819798992212", "[0, 4, 1, 0, 2, 2, 2, 0]", "31937.83807856747", "[1, 4, 0, 2, 0, 0, 0, 1]", "32139.336829159492", "[1, 4, 1, 0, 0, 1, 1, 0]", "29538.656183317657", "[0, 0, 0, 0, 0, 0, 0, 0]", "42878.86999182095", "[1, 2, 1, 0, 0, 2, 1, 0]", "28157.088177110214", "[1, 2, 0, 0, 1, 1, 1, 1]", "29409.500356248955", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "43142.96542848102", "[1, 4, 0, 2, 3, 1, 2, 1]", "42399.44772899994", "[0, 3, 1, 0, 3, 2, 1, 0]", "40725.59206945711", "[1, 4, 0, 2, 1, 2, 2, 0]", "39655.00302684889", "[0, 0, 0, 0, 0, 0, 0, 0]", "45489.51725469332", "[1, 3, 1, 0, 0, 1, 0, 1]", "40354.75012254188", "[0, 2, 1, 0, 0, 2, 1, 0]", "42767.81907581916", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "432509.90130443784", "[0, 4, 1, 1, 3, 2, 2, 1]", "398400.07418064494", "[1, 3, 0, 2, 3, 1, 1, 1]", "386566.48013095197", "[0, 3, 1, 2, 2, 2, 1, 0]", "419849.80816635187", "[0, 0, 0, 0, 0, 0, 0, 0]", "449310.02427120326", "[0, 0, 0, 2, 0, 2, 1, 1]", "433211.6338651629", "[0, 0, 1, 0, 2, 1, 0, 1]", "429011.0737318592", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 0, 2, 2, 1, 1]", "33050.0222655432", "[0, 3, 0, 1, 3, 2, 2, 1]", "33536.3829378942", "[1, 3, 0, 2, 3, 0, 0, 0]", "34190.971456888445", "[0, 4, 0, 0, 0, 2, 0, 0]", "35165.5279474895", "[0, 0, 0, 0, 0, 0, 0, 0]", "44045.84324268672", "[1, 2, 0, 2, 2, 2, 0, 0]", "32376.146259336427", "[1, 1, 0, 1, 3, 1, 2, 0]", "29759.434404366075", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 0, 2, 2, 2, 0]", "300729.7507624172", "[0, 0, 1, 2, 3, 2, 2, 0]", "237792.27254191152", "[1, 3, 0, 1, 0, 2, 1, 1]", "287007.69208909967", "[0, 4, 0, 1, 1, 1, 2, 0]", "305046.81978387904", "[0, 0, 0, 0, 0, 0, 0, 0]", "335625.27531107725", "[1, 1, 0, 2, 0, 0, 2, 0]", "265789.4550967237", "[1, 0, 0, 1, 0, 1, 1, 0]", "269022.1561104349", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[0, 4, 1, 2, 1, 2, 2, 1]", "1801778.0", "[0, 2, 0, 2, 3, 2, 2, 1]", "903615.0", "[1, 4, 0, 2, 2, 2, 2, 1]", "3326891.0", "[1, 4, 1, 2, 3, 2, 0, 1]", "5077072.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "6721120.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "6885660.0", "[0, 2, 1, 2, 3, 0, 2, 1]", "1357586.0", "[1, 1, 0, 2, 3, 1, 1, 1]", "870864.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 1, 2, 2, 1]", "1801778.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[1, 4, 1, 2, 3, 2, 1, 1]", "6878769.0", "[1, 3, 1, 2, 2, 2, 2, 1]", "1844009.0", "[1, 3, 1, 2, 3, 2, 2, 1]", "3699562.0", "[1, 4, 1, 2, 3, 2, 2, 0]", "5706370.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "8425679.0", "[1, 3, 1, 1, 0, 2, 2, 1]", "735082.0", "[1, 2, 1, 1, 3, 2, 0, 1]", "902172.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "5135656.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "4565056.0", "[0, 4, 1, 2, 3, 1, 2, 1]", "7029217.0", "[1, 4, 1, 0, 3, 2, 1, 1]", "3582719.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "9096256.0", "[0, 4, 1, 2, 2, 1, 1, 1]", "5450097.0", "[0, 0, 0, 2, 2, 2, 1, 1]", "8829545.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "6.8139216E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8", "[0, 4, 0, 2, 3, 1, 2, 0]", "6.20786384E8", "[1, 4, 1, 0, 3, 2, 2, 1]", "3.12513049E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "8.91711567E8", "[0, 4, 1, 2, 0, 0, 2, 0]", "6.37878686E8", "[1, 3, 0, 1, 0, 1, 0, 0]", "6.67520294E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 3, 2, 2, 1]", "3.92187826E8", "[1, 4, 1, 2, 3, 1, 2, 0]", "5.20780604E8", "[1, 4, 1, 0, 3, 1, 2, 0]", "1.85428139E8", "[1, 4, 1, 0, 0, 1, 2, 0]", "5.2791351E7", "[0, 4, 1, 2, 3, 2, 1, 1]", "3.8959458E8", "[1, 4, 0, 2, 3, 2, 2, 1]", "6.8139216E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "4.63536157E8", "[1, 2, 0, 2, 2, 1, 0, 0]", "5.5896618E7", "[0, 0, 1, 0, 3, 2, 0, 0]", "1.10335369E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "5135656.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "4565056.0", "[0, 4, 1, 2, 1, 2, 2, 1]", "4418089.0", "[0, 4, 1, 1, 3, 2, 2, 1]", "4653635.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "9096256.0", "[0, 4, 1, 2, 3, 2, 1, 0]", "6401145.0", "[0, 3, 0, 0, 2, 2, 2, 0]", "6825570.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "6.8139216E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8", "[1, 4, 1, 2, 3, 1, 2, 1]", "8.32183399E8", "[0, 4, 1, 1, 2, 2, 2, 1]", "5.89242303E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "8.91711567E8", "[0, 2, 1, 2, 2, 1, 1, 0]", "7.13605442E8", "[0, 4, 1, 1, 2, 1, 2, 0]", "5.90108018E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 2, 2, 1]", "2876596.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[0, 4, 1, 1, 3, 2, 2, 0]", "2051604.0", "[1, 4, 1, 0, 3, 2, 2, 0]", "2183887.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "4565056.0", "[1, 4, 1, 2, 3, 2, 2, 0]", "5706370.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "8705518.0", "[1, 2, 1, 1, 3, 1, 2, 1]", "1243050.0", "[1, 2, 1, 2, 2, 1, 1, 1]", "1217221.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 2, 1, 2, 3, 2, 2, 1]", "1.08443178E8", "[1, 1, 1, 2, 3, 2, 2, 1]", "9.786802E7", "[1, 4, 1, 2, 3, 2, 0, 0]", "3.52858084E8", "[0, 3, 1, 1, 3, 2, 2, 1]", "1.23067799E8", "[0, 4, 1, 2, 3, 2, 2, 1]", "5.11031924E8", "[1, 4, 1, 2, 2, 2, 2, 1]", "4.46695226E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "6.05615358E8", "[1, 1, 1, 0, 2, 1, 0, 0]", "1.74006193E8", "[0, 1, 0, 2, 3, 0, 2, 1]", "9.7194221E7", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 0, 0, 2, 2, 2, 1, 0]", "4.7522592E7", "[0, 3, 1, 1, 1, 2, 0, 0]", "3.4129719E7", "[1, 2, 0, 2, 0, 1, 1, 0]", "6.2223871E7", "[1, 1, 0, 1, 3, 0, 1, 0]", "7.7668128E7", "[1, 4, 1, 1, 0, 1, 1, 0]", "5.96868E7", "[1, 2, 1, 1, 3, 1, 1, 1]", "7.6074385E7", "[0, 0, 0, 0, 0, 0, 0, 0]", "4.63536157E8", "[1, 2, 0, 0, 1, 1, 0, 1]", "8.2826744E7", "[0, 0, 1, 0, 3, 0, 0, 0]", "1.7590937E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[3, 3, 0, 2, 0, 3, 3]", "6.3965169E7", "[4, 1, 0, 1, 0, 2, 2]", "1.80620587E8", "[2, 1, 1, 2, 0, 4, 4]", "5.37146807E8", "[2, 2, 1, 2, 1, 4, 4]", "2.34706833E8", "[4, 4, 1, 2, 0, 2, 4]", "2.64909869E8", "[3, 4, 0, 1, 1, 4, 1]", "5.9389911E7", "[0, 0, 0, 0, 0, 0, 0]", "4.024760481E9", "[0, 4, 1, 2, 1, 4, 2]", "9.78942721E8", "[0, 4, 1, 0, 1, 1, 2]", "3.493495119E9", "[5, 4, 1, 2, 1, 4, 4]", "4.024760481E9") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[4, 2, 1, 3, 0, 2, 0]", "3.76691875E8", "[4, 2, 0, 2, 1, 1, 0]", "4.93648513E8", "[0, 0, 2, 0, 1, 2, 0]", "1.758832303E9", "[0, 1, 0, 3, 0, 2, 0]", "5.34956827E8", "[1, 1, 3, 2, 0, 1, 1]", "1.94309871E8", "[4, 0, 0, 2, 0, 1, 2]", "1.125507537E9", "[0, 0, 0, 0, 0, 0, 0]", "4.361447303E9", "[0, 0, 0, 2, 1, 0, 0]", "1.416769273E9", "[0, 0, 0, 1, 0, 0, 2]", "2.836970255E9", "[5, 2, 3, 3, 1, 2, 2]", "1.0188277969E10") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[0, 4, 0, 0, 0, 2, 1, 0]", "6.703138111E9", "[0, 0, 0, 0, 1, 2, 2, 0]", "1.3879649691E10", "[0, 0, 1, 0, 1, 1, 0, 2]", "1.8970099543E10", "[0, 1, 0, 1, 1, 0, 0, 1]", "1.7413624699E10", "[1, 2, 0, 1, 1, 1, 0, 2]", "1.3457931051E10", "[2, 1, 0, 2, 1, 1, 1, 0]", "1.6201432191E10", "[0, 0, 0, 0, 0, 0, 0, 0]", "3.2756856071E10", "[0, 1, 0, 1, 1, 0, 0, 0]", "1.8309261099E10", "[0, 0, 0, 1, 0, 2, 0, 2]", "1.9759014883E10", "[2, 5, 1, 2, 2, 2, 2, 2]", "2.90793798009E11") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[0, 1, 0, 1, 1, 2, 0, 0]", "6.79066454E10", "[1, 1, 0, 1, 0, 0, 1, 1]", "2.9865741737E10", "[0, 2, 0, 1, 0, 0, 0, 1]", "8.6775063078E10", "[1, 2, 1, 0, 0, 0, 0, 0]", "9.84448153E10", "[2, 0, 1, 0, 0, 0, 1, 1]", "3.8433249494E10", "[0, 2, 1, 2, 0, 2, 0, 1]", "7.552215892E9", "[0, 0, 0, 0, 0, 0, 0, 0]", "6.0229370151E11", "[0, 1, 0, 1, 0, 2, 1, 0]", "1.20773461676E11", "[1, 0, 0, 0, 2, 0, 0, 0]", "8.9751254021E10", "[5, 2, 2, 3, 4, 2, 1, 1]", "1.424451798016E12") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 3, 1, 1, 3, 1, 1, 0]", "1012071.0", "[1, 4, 0, 2, 3, 2, 2, 0]", "4168425.0", "[0, 4, 1, 0, 0, 2, 1, 1]", "1309104.0", "[1, 2, 1, 2, 1, 2, 0, 1]", "1073238.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "8425679.0", "[0, 2, 0, 0, 2, 0, 1, 1]", "2529631.0", "[1, 2, 1, 0, 1, 1, 2, 1]", "1098972.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[1, 4, 0, 1, 3, 2, 2, 1]", "2776871.0", "[1, 2, 1, 2, 2, 1, 2, 0]", "4210607.0", "[0, 3, 1, 1, 0, 2, 2, 0]", "7102183.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "9096256.0", "[1, 3, 0, 0, 2, 1, 1, 1]", "5832609.0", "[1, 1, 0, 0, 2, 2, 2, 0]", "6456349.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 1, 2, 1]", "6.51069629E8", "[1, 4, 1, 1, 3, 2, 2, 1]", "4.56853172E8", "[1, 3, 0, 1, 2, 0, 1, 1]", "5.68438002E8", "[1, 1, 1, 1, 0, 2, 2, 1]", "4.76568155E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "8.91711567E8", "[0, 1, 1, 2, 2, 0, 1, 1]", "7.30323768E8", "[1, 0, 1, 0, 0, 1, 1, 1]", "7.52467594E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 1, 1, 2, 3, 1, 1, 1]", "1103295.0", "[0, 4, 1, 2, 3, 1, 2, 0]", "3022313.0", "[0, 1, 1, 1, 3, 2, 2, 0]", "818055.0", "[1, 4, 1, 1, 2, 1, 2, 0]", "1965745.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "8705518.0", "[1, 1, 0, 1, 3, 0, 0, 1]", "2798834.0", "[0, 1, 0, 2, 1, 0, 1, 1]", "3544067.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 0, 1, 3, 1, 0, 1]", "1.05961387E8", "[0, 1, 0, 0, 3, 2, 2, 1]", "5.1815769E7", "[0, 2, 1, 1, 2, 2, 0, 1]", "1.11508216E8", "[1, 0, 1, 1, 3, 1, 1, 0]", "7.8123768E7", "[0, 0, 0, 0, 0, 0, 0, 0]", "6.05615358E8", "[1, 1, 1, 1, 0, 0, 1, 0]", "2.32827528E8", "[1, 0, 1, 0, 1, 2, 0, 1]", "2.66210213E8", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[0, 4, 0, 2, 3, 2, 2, 1]", "3916464.0", "[0, 4, 0, 1, 0, 2, 2, 1]", "424500.0", "[0, 2, 1, 2, 3, 2, 2, 1]", "1104390.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "4565056.0", "[1, 4, 1, 2, 1, 2, 2, 1]", "3182632.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[0, 0, 0, 1, 2, 2, 0, 1]", "19708.0", "[1, 2, 1, 1, 0, 0, 2, 0]", "148000.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 2, 2, 2, 1]", "2507114.0", "[0, 4, 1, 2, 3, 2, 2, 0]", "3147790.0", "[1, 4, 1, 0, 3, 2, 2, 1]", "3137494.0", "[0, 4, 0, 2, 3, 1, 2, 1]", "3740386.0", "[1, 4, 1, 2, 2, 2, 2, 1]", "4454190.0", "[1, 4, 1, 2, 3, 2, 2, 0]", "5706370.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[0, 4, 0, 1, 3, 1, 2, 0]", "1362238.0", "[0, 4, 0, 2, 2, 0, 2, 1]", "1732612.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[0, 4, 1, 2, 3, 2, 2, 1]", "5135656.0", "[0, 4, 1, 1, 3, 2, 2, 1]", "2876596.0", "[0, 4, 1, 2, 3, 0, 2, 0]", "2622066.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[0, 0, 0, 1, 2, 0, 2, 0]", "21488.0", "[1, 1, 1, 1, 2, 1, 1, 1]", "197222.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "4.56853172E8", "[0, 4, 1, 2, 3, 2, 2, 1]", "5.11031924E8", "[1, 4, 0, 2, 3, 1, 2, 1]", "6.46520772E8", "[0, 4, 1, 2, 1, 2, 2, 1]", "1.80221352E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[0, 1, 0, 0, 1, 0, 0, 1]", "4544210.0", "[1, 0, 0, 1, 3, 2, 2, 1]", "8524648.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 2, 3, 2, 2, 1]", "3.6770985E8", "[0, 4, 1, 1, 1, 2, 2, 1]", "1.01990664E8", "[1, 4, 1, 1, 2, 2, 0, 0]", "9.6950278E7", "[1, 4, 1, 2, 2, 2, 1, 0]", "2.1530661E8", "[1, 4, 1, 2, 3, 2, 2, 0]", "5.6957378E8", "[1, 4, 1, 1, 3, 2, 0, 1]", "2.60892746E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[1, 0, 1, 1, 3, 2, 2, 0]", "8461812.0", "[1, 1, 0, 1, 0, 2, 0, 0]", "4426432.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "5135656.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[0, 3, 1, 2, 0, 2, 2, 1]", "429404.0", "[1, 4, 1, 2, 3, 1, 2, 1]", "8334570.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[1, 0, 1, 2, 2, 1, 2, 0]", "66364.0", "[0, 3, 0, 0, 0, 1, 2, 0]", "105264.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "5.11031924E8", "[1, 4, 1, 1, 3, 2, 2, 1]", "4.56853172E8", "[1, 4, 1, 0, 3, 2, 2, 1]", "3.11880088E8", "[1, 4, 1, 0, 3, 2, 1, 1]", "2.3670797E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[1, 0, 1, 0, 1, 0, 0, 1]", "1927858.0", "[0, 0, 1, 1, 0, 0, 0, 0]", "709192.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0", "[1, 4, 1, 1, 2, 2, 2, 1]", "2239008.0", "[0, 4, 0, 0, 3, 0, 1, 0]", "698824.0", "[1, 4, 1, 2, 3, 2, 1, 0]", "4355544.0", "[1, 4, 1, 2, 3, 2, 2, 0]", "5706370.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "4565056.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[1, 0, 0, 1, 0, 1, 1, 1]", "17440.0", "[0, 3, 0, 2, 2, 0, 0, 1]", "403352.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createDMStarMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 0, 2, 2, 2, 1]", "1.54396508E8", "[1, 4, 1, 1, 3, 1, 2, 1]", "4.17158014E8", "[1, 4, 0, 0, 2, 2, 0, 0]", "4.5032754E7", "[1, 4, 0, 0, 3, 2, 2, 1]", "2.4144756E8", "[1, 2, 1, 2, 3, 2, 2, 1]", "1.9061966E8", "[0, 4, 1, 1, 3, 2, 2, 1]", "2.90180796E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[0, 2, 0, 1, 1, 0, 2, 0]", "1.1562268E7", "[1, 3, 1, 0, 3, 2, 0, 0]", "5.8333584E7", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 3, 0, 2, 2, 0, 2, 0]", "4.4390778E7", "[0, 1, 1, 0, 2, 2, 0, 1]", "8651570.0", "[1, 4, 0, 1, 0, 0, 0, 1]", "3.5514078E7", "[0, 3, 1, 1, 0, 0, 2, 1]", "2.1394404E7", "[0, 4, 1, 1, 2, 0, 1, 1]", "9.1157482E7", "[1, 3, 1, 0, 3, 0, 2, 1]", "1.18940424E8", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[1, 4, 0, 0, 0, 0, 1, 1]", "3.3004132E7", "[1, 1, 1, 2, 2, 0, 0, 0]", "1.7040684E7", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[4, 4, 1, 1, 0, 0, 1]", "7392427.0", "[3, 1, 1, 2, 0, 1, 4]", "6117561.0", "[2, 1, 1, 1, 0, 4, 3]", "736107.0", "[5, 3, 0, 2, 1, 0, 0]", "9939939.0", "[4, 4, 0, 2, 1, 0, 3]", "1.5347427E7", "[4, 3, 0, 0, 1, 3, 1]", "1.4883871E7", "[0, 0, 0, 0, 0, 0, 0]", "63457.0", "[0, 3, 0, 2, 0, 3, 3]", "157897.0", "[0, 1, 1, 1, 0, 3, 2]", "94701.0", "[5, 4, 1, 2, 1, 4, 4]", "4.024760481E9") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[0, 2, 3, 0, 1, 2, 0]", "1.7055517E7", "[1, 2, 2, 0, 1, 0, 0]", "7.4340471E7", "[0, 1, 3, 0, 1, 2, 2]", "5.8048433E7", "[2, 1, 1, 0, 1, 1, 2]", "4.90226573E8", "[2, 2, 3, 3, 1, 0, 2]", "6.38369221E8", "[2, 2, 0, 3, 1, 1, 0]", "1.47217591E8", "[0, 0, 0, 0, 0, 0, 0]", "9306905.0", "[0, 0, 1, 2, 0, 0, 0]", "1.0125669E7", "[0, 2, 1, 0, 0, 1, 1]", "1.6050723E7", "[5, 2, 3, 3, 1, 2, 2]", "1.0188277969E10") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[0, 2, 0, 0, 1, 1, 0, 1]", "2.674947445E9", "[0, 0, 1, 0, 2, 2, 0, 1]", "8.282531415E9", "[0, 1, 0, 0, 0, 1, 0, 0]", "2.408734021E9", "[1, 0, 1, 1, 1, 1, 0, 1]", "4.935458395E9", "[0, 3, 1, 2, 0, 1, 1, 0]", "5.294383109E9", "[1, 5, 0, 2, 0, 1, 0, 0]", "9.151549775E9", "[0, 0, 0, 0, 0, 0, 0, 0]", "2.241709429E9", "[2, 0, 0, 0, 1, 1, 0, 0]", "8.601519003E9", "[0, 0, 1, 1, 1, 1, 0, 0]", "2.575758263E9", "[2, 5, 1, 2, 2, 2, 2, 2]", "2.90793798009E11") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[0, 0, 0, 0, 2, 0, 1, 1]", "2.0978252E8", "[1, 0, 2, 0, 1, 2, 0, 0]", "9.8169505E8", "[5, 0, 0, 1, 0, 0, 1, 0]", "2.7161538E8", "[0, 0, 0, 1, 1, 1, 1, 0]", "1.50060262E8", "[1, 2, 1, 3, 0, 2, 0, 1]", "1.712344072E9", "[2, 1, 1, 1, 2, 1, 0, 1]", "6.56513789E9", "[0, 0, 0, 0, 0, 0, 0, 0]", "9642324.0", "[0, 1, 1, 3, 0, 0, 0, 0]", "8.103245E7", "[0, 2, 0, 0, 0, 0, 1, 0]", "6.1794606E7", "[5, 2, 2, 3, 4, 2, 1, 1]", "1.424451798016E12") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 2, 1, 2, 3, 1, 1, 0]", "504494.0", "[0, 4, 1, 0, 2, 2, 1, 1]", "814530.0", "[0, 2, 1, 0, 3, 2, 1, 1]", "439116.0", "[1, 2, 1, 1, 3, 1, 0, 0]", "441048.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[1, 3, 0, 0, 2, 0, 0, 1]", "280638.0", "[1, 4, 0, 1, 0, 1, 0, 0]", "295624.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "5135656.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "6721120.0", "[1, 3, 0, 2, 2, 1, 2, 1]", "1279744.0", "[0, 4, 0, 2, 0, 2, 1, 1]", "598446.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[0, 3, 0, 0, 2, 2, 2, 0]", "260752.0", "[0, 0, 0, 0, 1, 0, 0, 0]", "10700.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "4.56853172E8", "[0, 4, 0, 2, 3, 2, 2, 1]", "3.92187826E8", "[1, 4, 1, 0, 0, 0, 1, 0]", "2.8401414E7", "[0, 3, 0, 1, 2, 0, 1, 1]", "3.2004598E7", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[1, 3, 0, 1, 0, 0, 0, 0]", "1.2523398E7", "[0, 0, 1, 1, 0, 2, 0, 1]", "996236.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 1, 3, 2, 2, 0]", "1424494.0", "[0, 1, 1, 1, 3, 2, 2, 1]", "358816.0", "[0, 3, 1, 2, 0, 2, 1, 1]", "337516.0", "[1, 4, 1, 1, 0, 1, 1, 0]", "497836.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "7832.0", "[0, 4, 0, 2, 1, 0, 2, 0]", "818158.0", "[0, 0, 0, 0, 2, 2, 2, 0]", "20632.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9096256.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createDMStarMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 3, 1, 0, 3, 2, 1, 0]", "4.78953E7", "[0, 0, 1, 1, 3, 2, 2, 1]", "7237306.0", "[0, 4, 0, 0, 1, 1, 0, 0]", "2.1800156E7", "[0, 2, 0, 1, 3, 2, 0, 1]", "2.9219442E7", "[0, 0, 0, 0, 0, 0, 0, 0]", "485542.0", "[0, 0, 0, 1, 1, 1, 0, 1]", "1228268.0", "[0, 0, 1, 2, 0, 2, 2, 0]", "1749754.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "9.09746244E8") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 1, 2, 2, 1]", "37223.24912482863", "[1, 4, 1, 1, 3, 2, 2, 0]", "40045.96229384987", "[1, 4, 0, 0, 3, 2, 2, 1]", "37632.44102272597", "[1, 1, 1, 2, 3, 2, 2, 1]", "35402.436193384216", "[1, 4, 1, 1, 2, 2, 2, 1]", "39177.741183062324", "[1, 4, 1, 2, 3, 2, 2, 0]", "43053.859802511084", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[1, 3, 1, 1, 1, 0, 1, 0]", "25955.251301026612", "[0, 2, 1, 0, 3, 0, 2, 1]", "27552.822806490036", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 2, 3, 2, 2, 0]", "38454.46136989568", "[0, 2, 1, 2, 3, 2, 2, 1]", "35461.30001724414", "[0, 4, 1, 1, 0, 2, 2, 0]", "28485.683777679253", "[0, 4, 0, 2, 3, 1, 2, 1]", "39349.66461351315", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328", "[0, 4, 1, 2, 3, 2, 2, 1]", "42760.9466619356", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 4, 1, 0, 1, 0, 2, 1]", "29594.098829978062", "[1, 1, 0, 1, 3, 1, 1, 1]", "27193.39307943938", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328", "[1, 4, 1, 1, 3, 2, 2, 1]", "42481.61974603207", "[0, 2, 1, 2, 3, 2, 2, 1]", "35461.30001724414", "[0, 4, 1, 2, 1, 2, 2, 1]", "37502.576040732165", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[1, 0, 1, 2, 1, 2, 1, 1]", "21503.488113251475", "[1, 4, 1, 2, 1, 1, 1, 0]", "34986.02097938047", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "425817.7142571101", "[0, 4, 1, 2, 3, 2, 2, 1]", "428467.2965004935", "[1, 4, 1, 2, 3, 2, 0, 1]", "413313.0671678029", "[0, 4, 1, 2, 2, 2, 2, 1]", "395506.9708302617", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 3, 0, 2, 2, 2, 0, 1]", "283200.5290883318", "[0, 2, 0, 0, 0, 1, 1, 0]", "136063.44244102243", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 0, 3, 2, 2, 1]", "373580.1797833489", "[1, 4, 1, 0, 2, 2, 2, 1]", "368037.4941895823", "[0, 2, 1, 0, 2, 2, 2, 1]", "267294.8596833071", "[1, 4, 1, 0, 1, 1, 2, 1]", "338257.19469914126", "[0, 4, 1, 2, 1, 2, 2, 1]", "376288.0867932698", "[1, 4, 1, 2, 3, 2, 0, 0]", "388894.94251402066", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 4, 1, 0, 3, 2, 0, 1]", "331008.3103741932", "[1, 1, 1, 1, 2, 2, 2, 1]", "291660.2013216377", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "42760.9466619356", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328", "[0, 3, 1, 2, 3, 2, 2, 1]", "38161.5482293202", "[0, 4, 1, 2, 1, 2, 2, 1]", "37502.576040732165", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 1, 0, 2, 1, 2, 1, 0]", "20798.296567023277", "[0, 0, 0, 1, 3, 2, 2, 0]", "17987.919334358554", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "428467.2965004935", "[1, 4, 1, 1, 3, 2, 2, 1]", "425817.7142571101", "[1, 4, 1, 2, 3, 1, 2, 1]", "445323.52112350945", "[0, 4, 0, 2, 3, 1, 2, 0]", "370112.7211207413", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[1, 3, 1, 0, 1, 1, 2, 0]", "267479.5329851057", "[0, 3, 0, 0, 3, 2, 1, 0]", "261460.73799815562", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "43097.83985133683", "[1, 4, 1, 1, 3, 2, 2, 0]", "40045.96229384987", "[0, 4, 1, 1, 3, 2, 2, 0]", "37317.391701092194", "[1, 4, 1, 2, 3, 2, 1, 0]", "41263.996245649905", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328", "[1, 4, 1, 1, 3, 2, 2, 1]", "42481.61974603207", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 1, 0, 1, 2, 0, 2, 1]", "21527.33374349589", "[1, 0, 1, 1, 2, 2, 2, 0]", "19804.28876750294", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 1, 3, 2, 2, 1]", "375025.03890812414", "[1, 3, 1, 1, 3, 2, 2, 1]", "379458.17719685676", "[1, 4, 1, 2, 2, 2, 0, 1]", "380352.7414975711", "[1, 3, 1, 2, 2, 2, 2, 1]", "376565.07384647353", "[1, 2, 1, 1, 3, 2, 2, 1]", "352492.71982730005", "[1, 3, 1, 2, 3, 2, 2, 1]", "409525.3995167053", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 0, 0, 1, 3, 2, 2, 1]", "204767.17920832505", "[1, 2, 1, 2, 2, 2, 0, 1]", "307027.747067761", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 2, 1, 1, 1, 1, 0, 0]", "222762.10060368918", "[0, 4, 0, 2, 3, 0, 0, 0]", "313015.3991510709", "[1, 3, 0, 1, 2, 0, 0, 1]", "255464.0788309846", "[1, 2, 0, 0, 1, 1, 1, 0]", "199172.29554439118", "[0, 3, 0, 1, 3, 1, 0, 1]", "275532.21698526584", "[1, 1, 1, 0, 3, 2, 1, 1]", "281833.88779593655", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[1, 0, 0, 0, 3, 1, 2, 0]", "172385.38478026283", "[0, 3, 1, 0, 0, 0, 0, 1]", "171691.4825658488", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[5, 4, 1, 1, 0, 0, 4]", "1568472.410778526", "[5, 4, 0, 1, 1, 0, 0]", "1600950.7143017333", "[5, 4, 1, 1, 0, 0, 0]", "1387588.9672072092", "[4, 2, 1, 0, 1, 4, 0]", "1494157.162135499", "[4, 0, 0, 2, 1, 2, 4]", "1569758.4542430998", "[4, 4, 0, 1, 1, 3, 0]", "1710062.9667936892", "[0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 0, 1, 0, 1, 4, 1]", "826951.7809639906", "[0, 1, 0, 0, 1, 4, 0]", "719419.9828839719", "[5, 4, 1, 2, 1, 4, 4]", "2207518.9993976974") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[4, 0, 1, 0, 0, 2, 1]", "820957.3570316522", "[2, 0, 0, 3, 0, 0, 0]", "637180.3903863031", "[3, 0, 2, 0, 0, 0, 2]", "809975.8664111901", "[1, 2, 1, 0, 0, 0, 0]", "493787.38967301423", "[1, 0, 2, 2, 0, 1, 1]", "721459.0930847724", "[4, 2, 0, 1, 1, 0, 1]", "992605.6157904895", "[0, 0, 0, 0, 0, 0, 0]", "-0.0", "[1, 1, 1, 0, 0, 1, 2]", "699439.648661842", "[3, 0, 1, 0, 0, 2, 0]", "678456.0696582572", "[5, 2, 3, 3, 1, 2, 2]", "1828114.5308318879") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[0, 0, 1, 1, 2, 1, 0, 1]", "2332878.094121182", "[1, 0, 0, 2, 2, 0, 0, 0]", "2307818.8921633805", "[0, 0, 0, 0, 0, 1, 2, 0]", "914712.958941533", "[0, 0, 0, 1, 0, 0, 2, 1]", "910392.3364476804", "[1, 4, 0, 1, 1, 0, 2, 1]", "2998560.937284109", "[0, 0, 1, 0, 0, 2, 2, 2]", "2515594.3599935677", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 0, 0, 0, 2, 1, 0, 0]", "1331276.5874308955", "[1, 0, 1, 1, 0, 1, 0, 1]", "1716120.1420457454", "[2, 5, 1, 2, 2, 2, 2, 2]", "7631154.350031186") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[2, 2, 0, 1, 0, 1, 0, 0]", "8201562.755925771", "[3, 0, 1, 0, 0, 0, 0, 1]", "6112513.785816341", "[0, 2, 0, 2, 0, 0, 0, 0]", "4533497.460732523", "[0, 1, 0, 0, 2, 0, 1, 0]", "6309358.2783013955", "[5, 2, 2, 1, 4, 2, 1, 1]", "2.3569887310553566E7", "[4, 2, 1, 3, 0, 1, 1, 0]", "1.2993516375412744E7", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 2, 1, 1, 0, 0, 0, 0]", "4711973.671212076", "[0, 2, 0, 1, 0, 1, 1, 0]", "5957603.147794448", "[5, 2, 2, 3, 4, 2, 1, 1]", "2.5025416064416602E7") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 0, 3, 1, 1, 0]", "32387.315368616597", "[0, 3, 1, 1, 1, 2, 1, 1]", "28105.416542594376", "[1, 4, 1, 2, 0, 0, 0, 0]", "27523.441788102176", "[0, 2, 1, 1, 2, 2, 0, 1]", "24893.892236760475", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 0, 0, 1, 1, 0, 1, 0]", "8496.606774150694", "[1, 0, 1, 0, 1, 0, 0, 0]", "8693.585298323636", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 3, 2, 2, 1]", "40089.94234267562", "[1, 4, 0, 2, 3, 2, 2, 1]", "43097.83985133683", "[1, 2, 0, 0, 2, 1, 2, 1]", "26009.311169998764", "[0, 4, 1, 2, 1, 2, 2, 1]", "37502.576040732165", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 3, 0, 0, 1, 2, 0, 1]", "20790.46966729674", "[0, 0, 1, 0, 2, 0, 0, 1]", "10355.164215981851", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "432509.90130443784", "[0, 4, 0, 2, 3, 2, 2, 1]", "405092.2612279727", "[0, 2, 1, 1, 0, 2, 2, 1]", "237204.65701670758", "[0, 2, 1, 0, 3, 1, 2, 1]", "289693.7699000897", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[1, 3, 0, 0, 1, 0, 0, 1]", "211425.30039669672", "[0, 3, 0, 2, 1, 0, 0, 1]", "238894.77703737607", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 3, 1, 2, 0]", "36914.007161330956", "[0, 4, 1, 1, 2, 2, 2, 0]", "34013.51313812245", "[0, 4, 1, 2, 0, 0, 1, 1]", "29696.296799518233", "[0, 1, 1, 2, 1, 1, 2, 0]", "23960.232882174903", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 0, 1, 1, 3, 0, 0, 1]", "16116.544098901242", "[0, 1, 1, 0, 0, 0, 2, 1]", "15933.680466459495", "[1, 4, 1, 2, 3, 2, 2, 1]", "45489.51725469328") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createEntropyMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 3, 0, 0, 3, 1, 2, 0]", "268866.0673433434", "[0, 2, 1, 0, 3, 2, 1, 0]", "257870.3159011197", "[0, 4, 0, 0, 3, 0, 0, 0]", "258128.28243392636", "[1, 0, 1, 0, 2, 1, 2, 1]", "187218.21903633408", "[0, 0, 0, 0, 0, 0, 0, 0]", "-0.0", "[0, 2, 1, 0, 2, 0, 0, 1]", "199636.12226018752", "[0, 0, 0, 0, 3, 0, 1, 0]", "112475.54734464604", "[1, 4, 1, 2, 3, 2, 2, 1]", "455884.93657695863") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 0]", "14.0", "[1, 2, 1, 2, 3, 2, 2, 1]", "14.0", "[1, 3, 1, 1, 1, 2, 2, 1]", "12.0", "[1, 4, 1, 0, 3, 2, 1, 0]", "12.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0", "[1, 4, 1, 2, 1, 2, 2, 1]", "14.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 2, 1, 1, 0, 0, 1, 0]", "5.0", "[1, 0, 1, 2, 3, 1, 0, 1]", "9.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 2, 3, 2, 2, 0]", "14.0", "[0, 3, 1, 2, 3, 2, 2, 1]", "14.0", "[1, 3, 1, 2, 2, 2, 2, 1]", "14.0", "[1, 3, 0, 2, 3, 2, 2, 1]", "14.0", "[0, 4, 1, 2, 3, 2, 2, 1]", "15.0", "[1, 4, 1, 2, 1, 2, 2, 1]", "14.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 2, 1, 0, 1, 1, 0, 0]", "5.0", "[1, 3, 0, 1, 1, 2, 1, 1]", "10.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "15.0", "[0, 4, 1, 2, 3, 2, 2, 1]", "15.0", "[0, 4, 1, 2, 2, 2, 2, 1]", "14.0", "[0, 4, 0, 0, 3, 0, 1, 0]", "8.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 1, 0, 1, 2, 2, 1]", "7.0", "[1, 4, 0, 0, 3, 2, 0, 0]", "10.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 2, 2, 1]", "14.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "15.0", "[1, 4, 0, 2, 3, 2, 2, 0]", "14.0", "[0, 4, 1, 2, 3, 2, 2, 0]", "14.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 2, 1, 0, 3, 0, 2, 0]", "8.0", "[1, 4, 0, 1, 1, 1, 0, 1]", "9.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 3, 1, 2, 3, 2, 2, 1]", "14.0", "[1, 4, 1, 0, 2, 2, 2, 1]", "13.0", "[0, 4, 1, 1, 3, 0, 2, 0]", "11.0", "[0, 3, 1, 2, 3, 1, 2, 1]", "13.0", "[1, 2, 1, 2, 3, 2, 2, 1]", "14.0", "[1, 4, 1, 2, 3, 2, 1, 0]", "14.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 3, 0, 1, 3, 2, 1, 0]", "10.0", "[0, 4, 1, 1, 3, 0, 0, 1]", "10.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "15.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0", "[0, 4, 1, 2, 3, 0, 2, 0]", "12.0", "[1, 4, 1, 2, 2, 2, 2, 1]", "15.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 4, 0, 1, 0, 2, 0, 0]", "8.0", "[0, 3, 1, 1, 3, 0, 0, 1]", "9.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "15.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "15.0", "[0, 3, 1, 1, 0, 2, 2, 1]", "10.0", "[0, 4, 1, 2, 1, 2, 2, 1]", "13.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 3, 1, 0, 2, 0, 2, 0]", "8.0", "[1, 3, 1, 2, 1, 2, 0, 1]", "11.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 0]", "14.0", "[0, 4, 1, 1, 3, 2, 2, 1]", "14.0", "[1, 4, 1, 2, 3, 2, 1, 0]", "14.0", "[1, 4, 1, 0, 3, 2, 2, 1]", "14.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0", "[1, 4, 1, 2, 3, 2, 2, 0]", "15.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 2, 0, 0, 1, 0, 0, 0]", "4.0", "[1, 3, 1, 2, 2, 0, 2, 0]", "11.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createHeightMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 0]", "14.0", "[1, 4, 1, 2, 2, 2, 2, 0]", "14.0", "[1, 3, 1, 2, 3, 2, 0, 1]", "13.0", "[0, 4, 1, 1, 2, 2, 2, 0]", "12.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "15.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "15.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 0, 0, 0, 0, 2, 1]", "4.0", "[0, 4, 0, 2, 2, 0, 1, 1]", "10.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 0, 1, 1, 3, 2, 0, 1]", "8.0", "[0, 1, 1, 1, 2, 1, 0, 1]", "7.0", "[0, 2, 1, 1, 0, 2, 0, 0]", "6.0", "[1, 2, 0, 0, 1, 2, 0, 1]", "7.0", "[1, 2, 1, 2, 0, 2, 2, 1]", "11.0", "[0, 2, 1, 1, 2, 1, 1, 0]", "8.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 1, 0, 2, 2, 0, 0, 1]", "7.0", "[1, 2, 1, 1, 0, 0, 2, 0]", "7.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[5, 3, 0, 0, 1, 0, 4]", "13.0", "[5, 4, 0, 0, 1, 2, 0]", "12.0", "[2, 4, 1, 1, 0, 0, 1]", "9.0", "[3, 3, 0, 2, 1, 0, 1]", "10.0", "[4, 4, 0, 2, 0, 3, 0]", "13.0", "[5, 2, 0, 0, 1, 3, 4]", "15.0", "[0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 3, 0, 0, 0, 3, 4]", "10.0", "[0, 4, 1, 2, 0, 0, 0]", "7.0", "[5, 4, 1, 2, 1, 4, 4]", "21.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[0, 0, 1, 2, 1, 2, 2]", "8.0", "[1, 0, 0, 2, 0, 2, 2]", "7.0", "[1, 2, 0, 0, 1, 2, 2]", "8.0", "[3, 1, 0, 0, 0, 2, 1]", "7.0", "[2, 2, 3, 0, 1, 2, 0]", "10.0", "[2, 1, 2, 0, 1, 0, 2]", "8.0", "[0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 3, 0, 0, 1, 0]", "4.0", "[1, 0, 2, 0, 0, 1, 1]", "5.0", "[5, 2, 3, 3, 1, 2, 2]", "18.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[0, 0, 0, 2, 2, 2, 0, 0]", "6.0", "[0, 1, 0, 0, 2, 0, 0, 1]", "4.0", "[0, 2, 0, 0, 1, 1, 0, 0]", "4.0", "[0, 1, 0, 1, 0, 1, 0, 1]", "4.0", "[2, 1, 1, 2, 1, 1, 0, 2]", "10.0", "[1, 4, 0, 0, 2, 2, 0, 1]", "10.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 0, 0, 0, 1, 1, 0]", "2.0", "[2, 0, 0, 1, 0, 0, 0, 0]", "3.0", "[2, 5, 1, 2, 2, 2, 2, 2]", "18.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[5, 1, 0, 3, 0, 0, 0, 0]", "9.0", "[4, 0, 0, 2, 0, 0, 1, 0]", "7.0", "[0, 1, 0, 3, 1, 0, 0, 0]", "5.0", "[1, 1, 1, 1, 0, 1, 0, 0]", "5.0", "[1, 1, 1, 1, 3, 0, 0, 1]", "8.0", "[0, 2, 0, 2, 0, 1, 1, 1]", "7.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 0, 1, 0, 1, 1, 0]", "4.0", "[0, 1, 0, 1, 0, 0, 0, 0]", "2.0", "[5, 2, 2, 3, 4, 2, 1, 1]", "20.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 1, 3, 1, 1, 0]", "10.0", "[0, 4, 0, 0, 3, 2, 2, 0]", "11.0", "[0, 2, 1, 1, 3, 1, 0, 1]", "9.0", "[1, 3, 0, 1, 1, 2, 1, 0]", "9.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 0, 1, 1, 2, 0, 0]", "4.0", "[1, 4, 1, 0, 0, 1, 0, 1]", "8.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "15.0", "[1, 4, 0, 2, 3, 1, 2, 1]", "14.0", "[1, 2, 1, 2, 0, 1, 2, 1]", "10.0", "[0, 3, 1, 1, 3, 2, 0, 1]", "11.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 3, 1, 1, 1, 0, 1, 1]", "9.0", "[0, 0, 1, 0, 0, 0, 1, 0]", "2.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 3, 2, 2, 1]", "14.0", "[1, 4, 0, 2, 3, 2, 2, 1]", "15.0", "[1, 2, 0, 1, 0, 1, 1, 1]", "7.0", "[1, 0, 1, 2, 2, 1, 1, 1]", "9.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 1, 0, 2, 0, 1, 1, 0]", "5.0", "[0, 1, 0, 1, 0, 2, 0, 1]", "5.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 0, 2, 2, 1, 1]", "11.0", "[0, 4, 0, 2, 3, 1, 2, 0]", "12.0", "[1, 1, 1, 2, 3, 1, 0, 1]", "10.0", "[1, 2, 1, 0, 3, 0, 1, 1]", "9.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 2, 1, 0, 0, 0, 0, 0]", "3.0", "[0, 2, 1, 0, 1, 1, 1, 0]", "6.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createHeightMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 1, 1, 0, 3, 1, 2, 0]", "8.0", "[0, 4, 0, 0, 3, 0, 2, 0]", "9.0", "[1, 0, 0, 1, 3, 1, 0, 1]", "7.0", "[0, 2, 0, 2, 1, 0, 2, 0]", "7.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 0, 0, 2, 2, 0, 1]", "5.0", "[1, 3, 1, 0, 1, 0, 0, 0]", "6.0", "[1, 4, 1, 2, 3, 2, 2, 1]", "16.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 3, 2, 2, 1]", "[100,100,100,100,100,100,43,0]", "[0, 4, 1, 2, 1, 2, 2, 1]", "[100,100,100,100,100,100,19,0]", "[1, 3, 1, 2, 2, 2, 2, 1]", "[100,100,100,100,100,100,37,19]", "[0, 4, 0, 1, 2, 2, 2, 1]", "[100,100,100,100,44,37,1,1]", "[1, 4, 1, 1, 2, 2, 2, 1]", "[100,100,100,100,100,100,43,37]", "[1, 4, 1, 2, 3, 2, 2, 0]", "[100,100,100,100,100,100,100,0]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[76,76,76,76,76,76,76,76]", "[0, 4, 0, 1, 1, 0, 2, 0]", "[100,100,48,26,8,8,8,8]", "[1, 1, 0, 2, 0, 2, 0, 0]", "[100,100,100,30,27,27,27,27]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 2, 2, 2, 1]", "[100,100,100,100,100,100,37,0]", "[0, 4, 1, 2, 3, 2, 2, 0]", "[100,100,100,100,100,100,0,0]", "[0, 4, 1, 2, 3, 0, 2, 0]", "[100,100,100,100,100,6,6,6]", "[1, 4, 1, 1, 1, 2, 2, 0]", "[100,100,100,100,100,43,19,0]", "[1, 4, 1, 2, 3, 2, 2, 0]", "[100,100,100,100,100,100,100,0]", "[1, 4, 1, 2, 2, 2, 2, 1]", "[100,100,100,100,100,100,100,37]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[93,93,93,93,93,93,93,93]", "[1, 4, 0, 1, 3, 1, 1, 0]", "[100,100,100,45,30,29,3,3]", "[0, 1, 0, 1, 2, 2, 1, 0]", "[100,58,53,46,28,25,25,25]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]", "[0, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,0]", "[0, 4, 0, 0, 3, 0, 1, 0]", "[100,100,78,69,69,69,69,69]", "[1, 4, 1, 2, 2, 2, 2, 1]", "[100,100,100,100,100,100,100,38]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[100,100,100,100,100,100,100,100]", "[0, 3, 0, 0, 0, 1, 1, 1]", "[100,92,92,91,89,89,89,89]", "[1, 2, 1, 0, 2, 1, 2, 1]", "[100,100,100,100,73,69,62,58]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]", "[0, 4, 1, 1, 3, 2, 2, 1]", "[100,100,100,100,100,100,43,0]", "[0, 4, 0, 0, 3, 0, 1, 0]", "[100,100,69,56,56,56,56,56]", "[1, 4, 1, 0, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,0]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[98,98,98,98,98,98,98,98]", "[1, 0, 0, 1, 0, 0, 1, 1]", "[100,100,91,87,82,82,82,82]", "[0, 3, 1, 0, 3, 2, 2, 0]", "[100,100,100,100,61,51,51,51]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 1, 2, 1]", "[100,100,100,100,100,43,27,0]", "[0, 4, 0, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,0,0]", "[1, 4, 1, 0, 1, 2, 2, 1]", "[100,100,100,100,100,100,19,0]", "[0, 3, 0, 2, 3, 2, 2, 1]", "[100,100,100,100,100,19,0,0]", "[0, 4, 1, 2, 3, 2, 1, 0]", "[100,100,100,100,100,29,0,0]", "[0, 4, 1, 2, 1, 2, 2, 1]", "[100,100,100,100,100,100,19,0]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[51,51,51,51,51,51,51,51]", "[0, 3, 1, 1, 1, 1, 0, 0]", "[100,45,30,22,22,4,4,4]", "[0, 0, 0, 2, 0, 0, 0, 0]", "[100,38,38,38,38,38,38,38]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,43]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]", "[0, 4, 1, 2, 3, 0, 2, 0]", "[100,100,100,100,100,57,57,57]", "[1, 4, 1, 0, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,7]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[100,100,100,100,100,100,100,100]", "[0, 3, 1, 2, 1, 1, 1, 1]", "[100,100,100,82,82,80,80,75]", "[1, 4, 1, 1, 2, 0, 1, 1]", "[100,100,100,100,73,63,59,42]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,0]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]", "[1, 4, 1, 0, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,0]", "[0, 4, 0, 2, 3, 1, 2, 0]", "[100,100,100,100,66,53,53,53]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[98,98,98,98,98,98,98,98]", "[0, 2, 0, 2, 2, 0, 2, 0]", "[100,100,82,73,70,70,70,70]", "[0, 0, 0, 1, 2, 0, 2, 1]", "[100,100,90,88,81,81,81,81]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 0]", "[100,100,100,100,100,100,43,0]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]", "[1, 3, 0, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,19,0]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[96,96,96,96,96,96,96,96]", "[1, 4, 1, 1, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,43]", "[1, 4, 1, 2, 3, 2, 2, 0]", "[100,100,100,100,100,100,100,0]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[96,96,96,96,96,96,96,96]", "[0, 1, 1, 2, 1, 0, 0, 1]", "[100,100,100,53,44,41,41,41]", "[1, 2, 0, 2, 3, 0, 2, 0]", "[100,100,100,100,18,9,9,9]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNDSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 1, 3, 2, 2, 1]", "[100,100,100,100,100,43,0,0]", "[1, 4, 1, 2, 3, 2, 1, 1]", "[100,100,100,100,100,100,100,29]", "[1, 4, 1, 2, 2, 2, 0, 1]", "[100,100,100,100,100,100,37,0]", "[0, 4, 1, 0, 3, 2, 2, 0]", "[100,100,100,100,100,0,0,0]", "[1, 4, 1, 2, 2, 2, 2, 1]", "[100,100,100,100,100,100,100,37]", "[1, 2, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,9]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[67,67,67,67,67,67,67,67]", "[1, 4, 1, 0, 3, 2, 0, 0]", "[100,100,100,100,100,3,3,3]", "[0, 1, 0, 1, 1, 2, 2, 0]", "[100,100,51,31,17,13,13,13]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 2, 1, 1, 1, 1, 1, 1]", "[100,100,45,30,29,21,11,2]", "[1, 2, 1, 0, 3, 0, 1, 1]", "[100,100,100,100,31,12,4,4]", "[0, 0, 0, 2, 2, 2, 1, 1]", "[100,100,100,40,33,6,6,6]", "[1, 0, 1, 0, 1, 2, 2, 0]", "[100,100,100,100,24,6,6,6]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[51,51,51,51,51,51,51,51]", "[1, 3, 1, 0, 1, 0, 1, 0]", "[100,100,33,24,24,6,6,6]", "[1, 1, 1, 0, 1, 0, 1, 1]", "[100,100,100,34,26,12,8,8]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[3, 2, 0, 2, 0, 1, 1]", "[100,26,13,12,6,5,5]", "[5, 1, 1, 2, 1, 3, 2]", "[100,100,100,100,44,33,4]", "[1, 4, 1, 1, 0, 2, 4]", "[100,100,100,50,26,12,12]", "[4, 1, 0, 1, 1, 0, 1]", "[100,57,41,32,27,24,24]", "[0, 0, 0, 0, 0, 0, 0]", "[100,100,100,100,100,100,100]", "[3, 3, 1, 0, 1, 0, 4]", "[100,100,100,67,60,59,59]", "[1, 3, 1, 2, 0, 1, 0]", "[100,100,82,79,77,77,77]", "[5, 4, 1, 2, 1, 4, 4]", "[100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[5, 2, 1, 1, 0, 1, 2]", "[100,100,100,24,24,21,0]", "[4, 2, 2, 3, 1, 2, 2]", "[100,100,100,100,100,44,38]", "[3, 2, 0, 0, 1, 1, 1]", "[100,100,30,24,17,6,6]", "[0, 2, 1, 2, 0, 1, 2]", "[100,100,52,29,25,5,5]", "[0, 0, 0, 0, 0, 0, 0]", "[43,43,43,43,43,43,43]", "[1, 2, 0, 0, 0, 2, 1]", "[100,100,26,21,17,17,17]", "[0, 0, 2, 1, 1, 0, 2]", "[100,100,48,29,7,7,7]", "[5, 2, 3, 3, 1, 2, 2]", "[100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[2, 3, 0, 2, 1, 2, 2, 2]", "[100,100,100,100,100,11,10,0]", "[0, 1, 1, 1, 1, 1, 1, 1]", "[100,44,39,12,9,6,3,1]", "[0, 0, 1, 0, 0, 2, 0, 2]", "[100,100,100,6,6,6,6,6]", "[0, 0, 1, 1, 1, 2, 0, 0]", "[100,100,47,16,6,6,6,6]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[10,10,10,10,10,10,10,10]", "[0, 1, 0, 1, 1, 0, 0, 0]", "[46,15,7,5,5,5,5,5]", "[2, 0, 0, 1, 0, 0, 0, 0]", "[100,47,6,6,6,6,6,6]", "[2, 5, 1, 2, 2, 2, 2, 2]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[0, 0, 2, 1, 0, 2, 0, 1]", "[100,100,100,6,2,2,2,2]", "[3, 0, 1, 0, 2, 2, 0, 1]", "[100,100,33,12,9,0,0,0]", "[4, 0, 0, 1, 0, 0, 0, 0]", "[35,14,10,10,10,10,10,10]", "[1, 1, 0, 0, 1, 0, 0, 0]", "[37,10,9,6,6,6,6,6]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[42,42,42,42,42,42,42,42]", "[0, 1, 2, 1, 0, 0, 1, 0]", "[100,100,38,11,7,7,7,7]", "[0, 0, 0, 3, 0, 0, 0, 0]", "[100,24,24,24,24,24,24,24]", "[5, 2, 2, 3, 4, 2, 1, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 0, 2, 2, 2, 1]", "[100,100,100,100,100,38,21,2]", "[0, 3, 0, 0, 3, 2, 2, 1]", "[100,100,100,100,23,5,5,5]", "[0, 3, 1, 1, 2, 2, 0, 0]", "[100,100,49,44,28,11,11,11]", "[1, 2, 1, 1, 1, 1, 2, 0]", "[100,100,100,48,33,26,16,8]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[93,93,93,93,93,93,93,93]", "[0, 4, 0, 2, 1, 0, 0, 1]", "[100,100,100,30,13,13,13,13]", "[1, 3, 0, 2, 2, 0, 2, 1]", "[100,100,100,100,42,26,9,9]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 2, 2, 2, 1]", "[100,100,100,100,100,100,100,38]", "[0, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,0]", "[1, 4, 0, 0, 2, 2, 0, 1]", "[100,100,100,100,71,54,54,54]", "[1, 3, 0, 2, 3, 1, 2, 0]", "[100,100,100,100,56,51,40,40]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[100,100,100,100,100,100,100,100]", "[0, 3, 1, 0, 3, 0, 0, 1]", "[100,100,100,64,56,56,56,56]", "[0, 2, 1, 1, 0, 1, 1, 0]", "[100,96,93,93,91,91,91,91]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 2, 2, 2, 1]", "[100,100,100,100,100,100,44,38]", "[1, 4, 0, 2, 3, 1, 2, 1]", "[100,100,100,100,100,100,28,1]", "[0, 2, 0, 2, 1, 0, 2, 1]", "[100,100,100,72,72,69,69,69]", "[1, 3, 0, 2, 3, 0, 1, 0]", "[100,100,100,61,56,46,46,46]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[98,98,98,98,98,98,98,98]", "[1, 2, 1, 1, 0, 0, 2, 0]", "[100,100,100,77,61,57,57,57]", "[0, 1, 1, 2, 0, 0, 2, 1]", "[100,100,100,100,81,80,80,80]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 1, 0, 0]", "[100,100,100,100,100,31,4,4]", "[1, 4, 1, 1, 3, 2, 0, 1]", "[100,100,100,100,100,100,43,1]", "[1, 4, 1, 0, 2, 2, 1, 0]", "[100,100,100,100,40,32,5,5]", "[1, 2, 0, 2, 2, 2, 1, 1]", "[100,100,100,100,42,34,16,8]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[96,96,96,96,96,96,96,96]", "[0, 0, 0, 1, 1, 1, 1, 0]", "[91,87,87,86,82,82,82,82]", "[0, 0, 0, 1, 0, 1, 2, 0]", "[100,96,93,90,90,90,90,90]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNDSMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 2, 0, 2, 1]", "[100,100,100,100,45,38,3,3]", "[1, 1, 0, 1, 3, 2, 1, 0]", "[100,100,100,45,30,6,3,3]", "[1, 2, 1, 1, 1, 0, 2, 0]", "[100,100,100,51,30,20,13,13]", "[0, 3, 0, 0, 1, 1, 2, 1]", "[100,100,36,30,29,12,12,12]", "[0, 0, 0, 0, 0, 0, 0, 0]", "[67,67,67,67,67,67,67,67]", "[1, 0, 1, 0, 0, 0, 0, 0]", "[100,100,52,52,52,52,52,52]", "[1, 1, 0, 0, 0, 2, 2, 0]", "[100,100,100,24,21,21,21,21]", "[1, 4, 1, 2, 3, 2, 2, 1]", "[100,100,100,100,100,100,100,100]") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 3, 1, 2, 3, 2, 2, 1]", "0.96875", "[1, 4, 1, 0, 3, 2, 2, 1]", "0.875", "[1, 4, 1, 1, 3, 2, 1, 1]", "0.875", "[0, 4, 1, 0, 3, 2, 2, 1]", "0.7501657824933687", "[1, 4, 1, 2, 3, 2, 0, 1]", "0.875", "[1, 4, 1, 2, 1, 2, 2, 1]", "0.9166666666666667", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.756631299734748", "[1, 3, 0, 1, 3, 1, 1, 1]", "0.6641143070291777", "[1, 3, 0, 1, 3, 1, 0, 0]", "0.49939903846153844", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 2, 1, 2, 3, 2, 2, 1]", "0.8125", "[0, 4, 1, 2, 3, 2, 2, 0]", "0.75", "[0, 4, 1, 1, 1, 2, 2, 1]", "0.7295258620689655", "[0, 4, 0, 2, 3, 1, 2, 1]", "0.6902975795755968", "[0, 4, 1, 2, 3, 2, 2, 1]", "0.875", "[1, 4, 1, 1, 3, 2, 2, 0]", "0.8125", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9260610079575596", "[1, 2, 1, 1, 2, 1, 0, 1]", "0.6841152740937225", "[0, 0, 1, 2, 3, 2, 2, 1]", "0.7560510610079576", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "0.875", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[1, 4, 1, 2, 3, 2, 0, 1]", "0.8969247347480106", "[0, 0, 0, 0, 0, 0, 0, 0]", "1.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "1.0", "[1, 3, 0, 2, 1, 0, 2, 1]", "0.7682671584880637", "[0, 3, 1, 1, 2, 0, 1, 0]", "0.883365108311229", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "0.875", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[1, 4, 1, 2, 3, 1, 2, 1]", "0.9376471222067502", "[1, 4, 1, 0, 3, 2, 2, 1]", "0.8750870300377959", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9801405742324779", "[0, 1, 1, 2, 2, 1, 1, 1]", "0.917836046460226", "[0, 3, 1, 1, 0, 0, 2, 1]", "0.8704651133877064", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 0, 3, 2, 2, 0]", "0.75", "[0, 4, 1, 1, 1, 2, 2, 1]", "0.7291666666666666", "[1, 4, 1, 2, 2, 2, 1, 0]", "0.7708713226355458", "[0, 0, 1, 2, 3, 2, 2, 1]", "0.75018234865062", "[1, 1, 1, 2, 3, 2, 2, 1]", "0.90625", "[1, 4, 1, 2, 3, 2, 0, 1]", "0.875", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.5090179696306611", "[1, 0, 0, 1, 2, 1, 2, 1]", "0.6108652167186083", "[0, 0, 0, 2, 1, 2, 0, 0]", "0.45063186570298164", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "0.875", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[0, 3, 1, 2, 0, 2, 2, 1]", "0.8949042606100795", "[1, 4, 1, 0, 3, 2, 0, 1]", "0.8099303713527851", "[0, 0, 0, 0, 0, 0, 0, 0]", "1.0", "[0, 2, 1, 2, 1, 0, 1, 0]", "0.9096761715296197", "[0, 4, 1, 1, 0, 1, 1, 1]", "0.9122388925729443", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 2, 2, 1]", "0.8125", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.875", "[1, 3, 1, 2, 3, 2, 2, 1]", "0.9708200716132882", "[1, 4, 1, 2, 2, 2, 2, 1]", "0.9590019450522733", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9801405742324779", "[0, 1, 0, 0, 3, 2, 2, 0]", "0.7387161411710099", "[0, 4, 0, 0, 3, 0, 1, 1]", "0.6548761686890789", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 3, 2, 2, 1]", "0.8125", "[0, 4, 1, 2, 3, 2, 2, 0]", "0.75", "[0, 4, 0, 2, 3, 1, 2, 0]", "0.5790368037135278", "[1, 4, 1, 0, 3, 2, 1, 0]", "0.6975505636604774", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[1, 4, 1, 2, 3, 2, 2, 0]", "0.875", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9568965517241379", "[1, 4, 1, 1, 1, 0, 2, 0]", "0.6596830791335102", "[1, 4, 1, 0, 2, 1, 1, 0]", "0.6218777630415562", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createNMPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 2, 2, 0]", "0.6875", "[1, 1, 1, 1, 3, 2, 2, 1]", "0.84375", "[1, 2, 0, 2, 2, 2, 2, 0]", "0.650248380965011", "[0, 4, 1, 2, 2, 2, 2, 0]", "0.7168526070331321", "[1, 3, 1, 2, 3, 2, 2, 1]", "0.96875", "[1, 4, 1, 2, 3, 2, 2, 0]", "0.875", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.6652741860619322", "[0, 3, 0, 1, 0, 2, 0, 1]", "0.5515279988064452", "[0, 0, 1, 1, 2, 1, 0, 1]", "0.6122742744733991", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 1, 0, 0, 0]", "0.3254370841898194", "[0, 4, 0, 1, 1, 1, 0, 0]", "0.31601988152863425", "[0, 3, 0, 0, 0, 2, 1, 0]", "0.3425875273522976", "[1, 0, 0, 1, 2, 0, 0, 0]", "0.42934887717436954", "[1, 4, 0, 2, 1, 0, 1, 0]", "0.49178947572000087", "[0, 4, 1, 1, 3, 1, 0, 1]", "0.6264670777799881", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.5090179696306611", "[0, 1, 0, 0, 3, 0, 0, 0]", "0.27206211458126117", "[0, 1, 0, 0, 0, 0, 1, 0]", "0.3013684437371527", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[5, 4, 0, 0, 0, 1, 2]", "0.40767180755122306", "[5, 0, 0, 0, 1, 1, 1]", "0.3854042113369678", "[0, 4, 0, 0, 1, 1, 0]", "0.999475890985325", "[0, 1, 1, 0, 0, 2, 2]", "0.9995400675993668", "[3, 4, 0, 0, 0, 3, 3]", "0.45228907849137673", "[4, 1, 0, 2, 1, 4, 1]", "0.6171797418073486", "[0, 0, 0, 0, 0, 0, 0]", "1.0", "[1, 2, 0, 1, 0, 2, 2]", "0.8729438150632647", "[0, 3, 0, 0, 0, 2, 3]", "0.996824946463193", "[5, 4, 1, 2, 1, 4, 4]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[4, 0, 0, 1, 0, 0, 0]", "0.1911152501065021", "[2, 0, 0, 2, 0, 0, 0]", "0.1931928307945031", "[4, 0, 1, 0, 0, 0, 0]", "0.2108269325939754", "[0, 0, 0, 0, 0, 2, 0]", "0.5027761305142245", "[1, 2, 2, 1, 0, 0, 2]", "0.4655381928473064", "[5, 1, 1, 3, 1, 2, 1]", "0.7619141973045892", "[0, 0, 0, 0, 0, 0, 0]", "0.4271773482469263", "[1, 0, 1, 0, 0, 0, 0]", "0.25870639724825994", "[3, 0, 1, 0, 0, 0, 0]", "0.20897787728979464", "[5, 2, 3, 3, 1, 2, 2]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[0, 3, 0, 0, 1, 0, 0, 0]", "0.17668935082419568", "[1, 2, 0, 0, 0, 0, 0, 0]", "0.15510470039109658", "[0, 0, 0, 0, 0, 0, 0, 2]", "0.19309790580673636", "[0, 0, 0, 1, 0, 0, 0, 1]", "0.20063170719495302", "[0, 2, 0, 1, 2, 1, 2, 1]", "0.4879837478882825", "[1, 4, 0, 0, 0, 0, 1, 2]", "0.35515296159687565", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.10493775648906914", "[1, 0, 0, 0, 0, 0, 0, 0]", "0.14170853013335113", "[0, 0, 0, 0, 0, 0, 0, 1]", "0.15372689164455275", "[2, 5, 1, 2, 2, 2, 2, 2]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[1, 0, 0, 0, 2, 1, 0, 0]", "0.18861415629943426", "[1, 0, 0, 0, 1, 0, 0, 1]", "0.20622333481915436", "[0, 0, 1, 1, 1, 0, 0, 0]", "0.22003543941480994", "[5, 1, 0, 0, 0, 0, 0, 0]", "0.2650919582171488", "[4, 2, 2, 0, 1, 2, 0, 1]", "0.631319207979194", "[3, 0, 1, 1, 3, 2, 1, 0]", "0.5238516429354237", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.4228188594256911", "[0, 0, 0, 2, 0, 0, 0, 0]", "0.3262034870990517", "[1, 0, 1, 0, 0, 0, 0, 0]", "0.22517655994449956", "[5, 2, 2, 3, 4, 2, 1, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 0, 3, 2, 2, 0]", "0.5182360742705571", "[0, 4, 0, 2, 3, 1, 2, 0]", "0.5738146551724138", "[0, 2, 0, 1, 1, 2, 0, 1]", "0.5901580459770115", "[0, 3, 0, 1, 3, 2, 0, 0]", "0.47771261604774534", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9260610079575596", "[1, 3, 0, 0, 0, 0, 0, 0]", "0.5415077917771883", "[1, 4, 0, 0, 1, 0, 0, 0]", "0.4304680592396109", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 1, 3, 2, 2, 1]", "0.8176599801061007", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.8769479442970822", "[0, 4, 0, 2, 2, 2, 2, 0]", "0.7517407161803713", "[1, 4, 0, 1, 2, 0, 2, 1]", "0.7811118479221927", "[0, 0, 0, 0, 0, 0, 0, 0]", "1.0", "[1, 1, 0, 0, 0, 0, 0, 0]", "0.9353759118037135", "[1, 0, 0, 0, 2, 1, 2, 0]", "0.9645432692307693", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 3, 2, 2, 1]", "0.7623168224918772", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.875", "[1, 2, 1, 0, 1, 1, 0, 1]", "0.826920739119864", "[0, 2, 1, 1, 2, 1, 0, 0]", "0.8722039873571601", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9801405742324779", "[1, 1, 0, 2, 1, 0, 1, 0]", "0.7172818861481334", "[1, 2, 1, 0, 1, 0, 0, 1]", "0.8463505404150918", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 3, 2, 1, 0]", "0.5826632957559682", "[0, 4, 0, 1, 3, 2, 2, 0]", "0.583098474801061", "[1, 3, 1, 1, 1, 1, 1, 0]", "0.6533488063660478", "[0, 0, 1, 1, 3, 2, 2, 0]", "0.6860908488063661", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.9568965517241379", "[0, 3, 0, 1, 3, 0, 1, 1]", "0.5552366545092838", "[0, 0, 1, 0, 3, 2, 0, 0]", "0.7882128647214854", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createNMPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 0, 3, 0, 2, 0]", "0.40496319872687486", "[0, 0, 1, 0, 3, 0, 0, 1]", "0.5379741064916119", "[0, 4, 0, 0, 1, 1, 2, 0]", "0.42033021682912275", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.6652741860619322", "[0, 1, 1, 1, 0, 0, 0, 1]", "0.566024716530734", "[0, 3, 0, 1, 1, 0, 1, 0]", "0.4008448130097474", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 2, 2, 2, 1]", "0.8333333333333333", "[1, 4, 1, 2, 3, 2, 1, 0]", "0.8125", "[1, 4, 1, 2, 2, 2, 0, 0]", "0.7083333333333334", "[0, 4, 1, 2, 0, 2, 2, 1]", "0.75", "[1, 4, 1, 2, 3, 2, 0, 1]", "0.875", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 1, 0, 1, 3, 2, 2, 1]", "0.71875", "[0, 4, 0, 0, 0, 2, 2, 1]", "0.5", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 3, 1, 2, 3, 2, 2, 1]", "0.84375", "[0, 4, 1, 1, 3, 2, 2, 1]", "0.8125", "[0, 4, 1, 1, 1, 2, 2, 1]", "0.7291666666666667", "[0, 4, 1, 2, 2, 2, 2, 0]", "0.7083333333333333", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 4, 1, 1, 3, 1, 0, 0]", "0.625", "[1, 0, 1, 1, 3, 0, 1, 0]", "0.5", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[1, 4, 1, 2, 3, 2, 2, 0]", "0.875", "[1, 4, 1, 2, 3, 1, 2, 1]", "0.9375", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 1, 0, 0, 0, 1, 0]", "0.1875", "[1, 0, 0, 2, 0, 2, 1, 1]", "0.5625", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.875", "[1, 3, 1, 2, 3, 2, 2, 1]", "0.96875", "[0, 4, 1, 2, 3, 0, 2, 0]", "0.625", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 1, 0, 1, 0, 0, 1, 1]", "0.28125", "[0, 1, 1, 0, 0, 2, 1, 0]", "0.34375", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 1, 3, 2, 2, 0]", "0.6875", "[1, 4, 0, 2, 2, 2, 2, 1]", "0.8333333333333333", "[0, 4, 1, 0, 2, 2, 2, 1]", "0.7083333333333333", "[1, 4, 1, 2, 2, 2, 0, 1]", "0.8333333333333334", "[0, 4, 1, 2, 3, 2, 1, 0]", "0.6875", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 3, 1, 0, 1, 2, 2, 0]", "0.6354166666666667", "[0, 4, 1, 1, 1, 1, 0, 1]", "0.5416666666666667", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[0, 4, 1, 2, 3, 2, 2, 1]", "0.875", "[0, 4, 0, 0, 3, 0, 1, 0]", "0.3125", "[0, 4, 1, 2, 2, 2, 2, 1]", "0.8333333333333333", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 2, 0, 1, 0, 1, 1, 1]", "0.375", "[0, 1, 1, 0, 1, 2, 1, 1]", "0.5104166666666666", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.875", "[0, 4, 1, 1, 3, 2, 2, 1]", "0.8125", "[1, 4, 1, 2, 3, 2, 0, 1]", "0.875", "[0, 4, 1, 1, 2, 2, 2, 1]", "0.7708333333333333", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 0, 0, 1, 2, 1, 0]", "0.35416666666666663", "[0, 1, 0, 2, 1, 0, 1, 1]", "0.38541666666666663", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 1, 2, 3, 2, 2, 1]", "0.875", "[1, 4, 1, 1, 2, 2, 2, 1]", "0.8958333333333334", "[0, 4, 1, 2, 3, 0, 2, 0]", "0.625", "[0, 4, 0, 0, 3, 0, 1, 0]", "0.3125", "[1, 4, 1, 2, 3, 2, 2, 0]", "0.875", "[1, 4, 1, 1, 3, 2, 2, 1]", "0.9375", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 0, 0, 0, 2, 0, 0]", "0.25", "[0, 3, 0, 2, 3, 1, 0, 1]", "0.53125", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.0d, Metric.createPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 1, 2, 3, 1, 2, 1]", "0.9375", "[1, 4, 1, 0, 3, 2, 2, 1]", "0.875", "[0, 4, 1, 2, 2, 1, 2, 1]", "0.7708333333333333", "[0, 4, 0, 2, 3, 1, 2, 0]", "0.5625", "[1, 2, 1, 1, 3, 2, 2, 1]", "0.875", "[1, 3, 1, 2, 3, 2, 2, 1]", "0.96875", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 2, 1, 0, 0, 0, 1, 0]", "0.375", "[0, 2, 0, 1, 0, 2, 1, 0]", "0.3125", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 2, 0, 2, 2, 1, 2, 0]", "0.4583333333333333", "[1, 0, 0, 1, 3, 2, 1, 0]", "0.5", "[1, 3, 0, 0, 2, 0, 2, 0]", "0.4270833333333333", "[0, 2, 1, 1, 1, 0, 2, 1]", "0.5416666666666667", "[0, 2, 1, 1, 1, 2, 0, 1]", "0.5416666666666667", "[0, 4, 0, 0, 1, 1, 2, 1]", "0.47916666666666663", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 1, 1, 0, 0, 0, 2, 0]", "0.40625", "[0, 0, 1, 0, 0, 1, 2, 0]", "0.3125", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)), "RAMNTALL", "../arx-data/data-junit/cup.csv", "[4, 0, 1, 2, 0, 4, 1]", "0.5785714285714285", "[5, 1, 0, 1, 1, 1, 0]", "0.42857142857142855", "[4, 0, 0, 2, 1, 1, 0]", "0.43571428571428567", "[5, 0, 1, 2, 0, 1, 1]", "0.5", "[5, 2, 1, 1, 0, 1, 4]", "0.6071428571428571", "[3, 3, 1, 2, 1, 1, 4]", "0.7999999999999999", "[0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 2, 1, 1, 1, 1, 3]", "0.5714285714285714", "[2, 2, 0, 0, 1, 1, 1]", "0.34285714285714286", "[5, 4, 1, 2, 1, 4, 4]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)), "istatenum", "../arx-data/data-junit/fars.csv", "[2, 2, 1, 0, 0, 2, 1]", "0.46190476190476193", "[1, 0, 0, 1, 1, 2, 0]", "0.3619047619047619", "[2, 1, 0, 1, 0, 1, 2]", "0.3904761904761905", "[2, 1, 2, 0, 0, 1, 1]", "0.36666666666666664", "[3, 1, 3, 2, 0, 0, 1]", "0.4666666666666667", "[2, 1, 2, 0, 1, 2, 0]", "0.5095238095238095", "[0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 2, 0, 1, 0, 2]", "0.4095238095238095", "[2, 1, 2, 0, 0, 0, 2]", "0.36666666666666664", "[5, 2, 3, 3, 1, 2, 2]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)), "Highest level of school completed", "../arx-data/data-junit/atus.csv", "[0, 1, 0, 0, 2, 2, 0, 1]", "0.3375", "[1, 1, 0, 0, 2, 2, 0, 1]", "0.4", "[0, 3, 0, 0, 0, 0, 0, 0]", "0.075", "[1, 0, 0, 1, 1, 2, 0, 1]", "0.375", "[0, 2, 0, 1, 1, 1, 1, 0]", "0.3", "[2, 2, 1, 2, 2, 1, 2, 1]", "0.8", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 0, 0, 2, 0, 1, 0]", "0.1875", "[0, 0, 1, 0, 0, 0, 1, 0]", "0.1875", "[2, 5, 1, 2, 2, 2, 2, 2]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)), "EDUC", "../arx-data/data-junit/ihis.csv", "[0, 1, 1, 2, 0, 0, 0, 1]", "0.3333333333333333", "[2, 0, 0, 1, 1, 0, 0, 1]", "0.24791666666666667", "[3, 0, 1, 1, 0, 1, 0, 0]", "0.24166666666666667", "[0, 0, 0, 3, 2, 0, 0, 0]", "0.1875", "[2, 1, 2, 3, 2, 2, 1, 0]", "0.675", "[0, 1, 2, 1, 0, 1, 0, 1]", "0.41666666666666663", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 1, 1, 0, 0, 1, 0]", "0.25416666666666665", "[0, 0, 0, 3, 0, 1, 1, 0]", "0.3125", "[5, 2, 2, 3, 4, 2, 1, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 1, 3, 1, 1, 0]", "0.4375", "[0, 4, 0, 2, 3, 1, 2, 0]", "0.5625", "[1, 0, 0, 2, 0, 0, 0, 1]", "0.375", "[1, 1, 0, 0, 2, 0, 1, 1]", "0.4270833333333333", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 1, 1, 2, 0, 0, 1]", "0.3958333333333333", "[1, 1, 1, 0, 0, 1, 0, 0]", "0.34375", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.875", "[1, 4, 0, 2, 3, 1, 2, 1]", "0.8125", "[1, 1, 1, 0, 3, 2, 2, 0]", "0.65625", "[0, 1, 1, 2, 3, 2, 1, 1]", "0.71875", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 1, 1, 2, 3, 0, 0, 1]", "0.65625", "[1, 0, 1, 2, 2, 0, 1, 0]", "0.5208333333333333", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1, 4, 0, 2, 3, 2, 2, 1]", "0.875", "[0, 4, 0, 2, 3, 2, 2, 1]", "0.75", "[0, 4, 0, 0, 2, 1, 0, 1]", "0.3958333333333333", "[1, 4, 1, 0, 1, 1, 0, 1]", "0.6041666666666667", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 1, 0, 1, 0, 0, 2, 0]", "0.34375", "[1, 1, 1, 1, 0, 0, 0, 1]", "0.46875", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)).addCriterion(new DPresence(0.05, 0.15, DataSubset.create(Data.create("../arx-data/data-junit/adult.csv", ';'), Data.create("../arx-data/data-junit/adult_subset.csv", ';')))), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 2, 3, 1, 2, 0]", "0.5625", "[0, 2, 1, 0, 3, 1, 2, 0]", "0.5", "[1, 3, 1, 0, 0, 0, 1, 1]", "0.53125", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[1, 0, 0, 1, 2, 0, 2, 0]", "0.3958333333333333", "[1, 2, 0, 1, 0, 1, 1, 0]", "0.375", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
                { new ARXUtilityMetricsTestCase(ARXConfiguration.create(0.05d, Metric.createPrecisionMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0, 4, 0, 0, 3, 0, 2, 0]", "0.375", "[1, 4, 0, 0, 1, 0, 0, 0]", "0.2916666666666667", "[0, 2, 0, 0, 0, 2, 0, 1]", "0.3125", "[0, 0, 0, 0, 0, 0, 0, 0]", "0.0", "[0, 0, 0, 0, 0, 0, 2, 0]", "0.125", "[0, 1, 0, 0, 0, 0, 0, 1]", "0.15625", "[1, 4, 1, 2, 3, 2, 2, 1]", "1.0") },
        });
    }
    
    public TestUtilityMetrics(final ARXUtilityMetricsTestCase testCase) {
        super(testCase);
    }
}
